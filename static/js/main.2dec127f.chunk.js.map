{"version":3,"sources":["logo.svg","components/Table.js","utils/API.js","components/SearchForm.js","App.js","reportWebVitals.js","index.js"],"names":["Table","props","className","scope","onClick","handleSorting","class","users","map","item","src","picture","thumbnail","name","first","last","email","axios","get","SearchForm","htmlFor","onChange","handleInputChange","value","type","placeholder","id","App","useState","setUsers","cloneUsers","setCloneUsers","search","setSearch","useEffect","Api","then","res","data","results","catch","err","console","log","event","target","newUsers","filter","user","toLowerCase","includes","sortedUsers","sort","a","b","localeCompare","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAe,I,YCMA,SAASA,EAAMC,GAC5B,OACE,wBAAOC,UAAU,QAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,oBAAIC,MAAM,MAAV,iBACA,qBAAIA,MAAM,MAAMC,QAASH,EAAMI,cAA/B,mBACQ,mBAAGC,MAAM,8BAEjB,oBAAIH,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,wBAGJ,gCACGF,EAAMM,MAAMC,KAAI,SAACC,GAAD,OACf,+BACE,oBAAIN,MAAM,MAAV,SACE,qBAAKO,IAAKD,EAAKE,QAAQC,cAEzB,6BAAKH,EAAKI,KAAKC,QACf,6BAAKL,EAAKI,KAAKE,OACf,6BAAKN,EAAKO,mB,qBCxBP,EACH,WACR,OAAOC,IAAMC,IAJD,0CCqBDC,MApBf,SAAoBlB,GAClB,OACE,+BACE,sBAAKC,UAAU,aAAf,UACE,uBAAOkB,QAAQ,SAAf,qBACA,uBACEC,SAAUpB,EAAMqB,kBAChBC,MAAOtB,EAAMsB,MACbV,KAAK,SACLW,KAAK,OACLtB,UAAU,eACVuB,YAAY,oBACZC,GAAG,WAEL,6BCiCOC,MA3Cf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNrB,EADM,KACCsB,EADD,OAEuBD,mBAAS,IAFhC,mBAENE,EAFM,KAEMC,EAFN,OAGeH,mBAAS,IAHxB,mBAGNI,EAHM,KAGEC,EAHF,KAmCb,OA/BAC,qBAAU,WAERC,IACGC,MAAK,SAACC,GACLR,EAASQ,EAAIC,KAAKC,SAClBR,EAAcM,EAAIC,KAAKC,YAExBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,IAwBD,sBAAKvC,UAAU,MAAf,UACE,cAAC,EAAD,CAAYqB,MAAOS,EAAQV,kBAvBL,SAACsB,GACzB,IAAMrB,EAAQqB,EAAMC,OAAOtB,MAE3BU,EAAUV,GAEV,IAAMuB,EAAWhB,EAAWiB,QAAO,SAACC,GAClC,OAAOA,EAAKnC,KAAKC,MAAMmC,cAAcC,SAAS3B,EAAM0B,kBAEtDpB,EAASiB,MAgBP,cAAC9C,EAAD,CAAOO,MAAOA,EAAOF,cAbH,WACpB,IAAI8C,EAAc5C,EAAM6C,MAAK,SAACC,EAAGC,GAC/B,OAAOD,EAAExC,KAAKC,MAAMyC,cAAcD,EAAEzC,KAAKC,UAE3C4B,QAAQC,IAAIQ,GAEZA,EAAcA,EAAY3C,KAAI,SAACwC,GAAD,OAAUA,KACxCnB,EAASsB,UC1BEK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2dec127f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n// props={\r\n//   users,\r\n//   handleSorting\r\n// }\r\n\r\nexport default function Table(props) {\r\n  return (\r\n    <table className=\"table\">\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">img</th>\r\n          <th scope=\"col\" onClick={props.handleSorting}>\r\n            First <i class=\"fas fa-arrow-circle-up\"></i>\r\n          </th>\r\n          <th scope=\"col\">Last</th>\r\n          <th scope=\"col\">Email</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.users.map((item) => (\r\n          <tr>\r\n            <th scope=\"row\">\r\n              <img src={item.picture.thumbnail} />\r\n            </th>\r\n            <td>{item.name.first}</td>\r\n            <td>{item.name.last}</td>\r\n            <td>{item.email}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst BASEURL = \"https://randomuser.me/api/?results=50\";\r\n\r\nexport default {\r\n  findUser: function () {\r\n    return axios.get(BASEURL);\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"search\">Search:</label>\r\n        <input\r\n          onChange={props.handleInputChange}\r\n          value={props.value}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search for a user\"\r\n          id=\"search\"\r\n        />\r\n        <br />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Table from \"./components/Table\";\nimport { useState, useEffect } from \"react\";\nimport Api from \"./utils/API\";\nimport SearchForm from \"./components/SearchForm\";\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [cloneUsers, setCloneUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    // use the API to return user data and set to users state\n    Api.findUser()\n      .then((res) => {\n        setUsers(res.data.results);\n        setCloneUsers(res.data.results);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const handleInputChange = (event) => {\n    const value = event.target.value;\n\n    setSearch(value);\n\n    const newUsers = cloneUsers.filter((user) => {\n      return user.name.first.toLowerCase().includes(value.toLowerCase());\n    });\n    setUsers(newUsers);\n  };\n\n  const handleSorting = () => {\n    let sortedUsers = users.sort((a, b) => {\n      return a.name.first.localeCompare(b.name.first);\n    });\n    console.log(sortedUsers);\n\n    sortedUsers = sortedUsers.map((user) => user);\n    setUsers(sortedUsers);\n  };\n\n  return (\n    <div className=\"App\">\n      <SearchForm value={search} handleInputChange={handleInputChange} />\n      <Table users={users} handleSorting={handleSorting} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}